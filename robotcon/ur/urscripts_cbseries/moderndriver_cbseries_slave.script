def driverProg():
    # slave urscript for synchonized dual-arm motion
    # author: weiwei
    # date: 20210405osaka

	SERVO_IDLE = 0
	SERVO_RUNNING = 1
	cmd_servo_state = SERVO_IDLE
	cmd_servo_q = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

	def set_servo_setpoint(q):
		enter_critical
		cmd_servo_state = SERVO_RUNNING
		cmd_servo_q = q
		exit_critical
	end

	thread servoThread():
		state = SERVO_IDLE
		while True:
			enter_critical
			q = cmd_servo_q
			do_brake = False
			if (state == SERVO_RUNNING) and (cmd_servo_state == SERVO_IDLE):
				do_brake = True
			end
			state = cmd_servo_state
			cmd_servo_state = SERVO_IDLE
			exit_critical
			if do_brake:
				stopj(1.0)
				sync()
			elif state == SERVO_RUNNING:
				# textmsg(q)
				servoj(q)
			else:
				sync()
			end
		end
	end

    # use two registers to represent a large integer
    modbus_add_signal("parameter_master_ip", 0, 255, 3, "base_l")
    modbus_add_signal("parameter_master_ip", 0, 254, 3, "base_u")
    modbus_add_signal("parameter_master_ip", 0, 253, 3, "base_sgn")
    modbus_add_signal("parameter_master_ip", 0, 252, 3, "shoulder_l")
    modbus_add_signal("parameter_master_ip", 0, 251, 3, "shoulder_u")
    modbus_add_signal("parameter_master_ip", 0, 250, 3, "shoulder_sgn")
    modbus_add_signal("parameter_master_ip", 0, 249, 3, "elbow_l")
    modbus_add_signal("parameter_master_ip", 0, 248, 3, "elbow_u")
    modbus_add_signal("parameter_master_ip", 0, 247, 3, "elbow_sgn")
    modbus_add_signal("parameter_master_ip", 0, 246, 3, "wrist1_l")
    modbus_add_signal("parameter_master_ip", 0, 245, 3, "wrist1_u")
    modbus_add_signal("parameter_master_ip", 0, 244, 3, "wrist1_sgn")
    modbus_add_signal("parameter_master_ip", 0, 243, 3, "wrist2_l")
    modbus_add_signal("parameter_master_ip", 0, 242, 3, "wrist2_u")
    modbus_add_signal("parameter_master_ip", 0, 241, 3, "wrist2_sgn")
    modbus_add_signal("parameter_master_ip", 0, 240, 3, "wrist3_l")
    modbus_add_signal("parameter_master_ip", 0, 239, 3, "wrist3_u")
    modbus_add_signal("parameter_master_ip", 0, 238, 3, "wrist3_gn")
    modbus_add_signal("parameter_master_ip", 0, 200, 3, "conf_counter")
	thread_servo = run servoThread()
	keepalive = 1
	previous_conf_counter = 0
	while keepalive > 0:
        conf_counter = modbus_get_signal_status("conf_counter", False)
        if conf_counter-previous_conf_counter = 1:
            # base
            base_l_value = modbus_get_signal_status("base_l", False)
            base_u_value = modbus_get_signal_status("base_u", False)
            base_sgn = modbus_get_signal_status("base_sgn", False)
            base_value = base_sgn * (base_u_value * parameter_jnts_scaler + base_l_value)
            # shoulder
            shoulder_l_value = modbus_get_signal_status("shoulder_l", False)
            shoulder_u_value = modbus_get_signal_status("shoulder_u", False)
            shoulder_sgn = modbus_get_signal_status("shoulder_sgn", False)
            shoulder_value = shoulder_sgn * (shoulder_u_value * parameter_jnts_scaler + shoulder_l_value)
            # elbow
            elbow_l_value = modbus_get_signal_status("elbow_l", False)
            elbow_u_value = modbus_get_signal_status("elbow_u", False)
            elbow_sgn = modbus_get_signal_status("elbow_sgn", False)
            elbow_value = elbow_sgn * (elbow_u_value * parameter_jnts_scaler + elbow_l_value)
            # wrist1
            wrist1_l_value = modbus_get_signal_status("wrist1_l", False)
            wrist1_u_value = modbus_get_signal_status("wrist1_u", False)
            wrist1_sgn = modbus_get_signal_status("wrist1_sgn", False)
            wrist1_value = wrist1_sgn * (wrist1_u_value * parameter_jnts_scaler + wrist1_l_value)
            # wrist2
            wrist2_l_value = modbus_get_signal_status("wrist2_l", False)
            wrist2_u_value = modbus_get_signal_status("wrist2_u", False)
            wrist2_sgn = modbus_get_signal_status("wrist2_sgn", False)
            wrist2_value = wrist2_sgn * (wrist2_u_value * parameter_jnts_scaler + wrist2_l_value)
            # wrist3
            wrist3_l_value = modbus_get_signal_status("wrist3_l", False)
            wrist3_u_value = modbus_get_signal_status("wrist3_u", False)
            wrist3_sgn = modbus_get_signal_status("wrist3_sgn", False)
            wrist3_value = wrist3_sgn * (wrist3_u_value * parameter_jnts_scaler + wrist3_l_value)
            # show
            textmsg(base_value)
            textmsg(shoulder_value)
            textmsg(elbow_value)
            textmsg(wrist1_value)
            textmsg(wrist2_value)
            textmsg(wrist3_value)
			set_servo_setpoint(q)
            write_port_register(200, conf_counter)
            sync()
        end
        sleep(.001)
	end
	sync()
	socket_close()
	kill thread_servo
end